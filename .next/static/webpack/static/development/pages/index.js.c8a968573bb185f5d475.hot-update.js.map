{"version":3,"file":"static/webpack/static/development/pages/index.js.c8a968573bb185f5d475.hot-update.js","sources":["webpack:///./components/Signup/index.js"],"sourcesContent":["const firebase = require('../../node_modules/firebase');\nconst firebaseConfig = require('../../fire');\n\nexport default class Signup extends React.Component {\n                 constructor() {\n                   super();\n\n                   if (!firebase.apps.length) {\n                     try {\n                       firebase.initializeApp(firebaseConfig);\n                     } catch (err) {\n                       console.error(\n                         \"Firebase initialization error raised\",\n                         err.stack\n                       );\n                     }\n                   }\n\n                   this.state = {\n                     email: \"\",\n                     name: \"\",\n                     hasAgreed: false\n                   };\n\n                   this.handleChange = this.handleChange.bind(\n                     this\n                   );\n                   this.handleSubmit = this.handleSubmit.bind(\n                     this\n                   );\n\n                   this.inputNameRef = React.createRef();\n                 }\n\n                 handleChange(e) {\n                   let target = e.target;\n                   let value =\n                     target.type === \"checkbox\"\n                       ? target.checked\n                       : target.value;\n                   let name = target.name;\n\n                   this.setState({\n                     [name]: value\n                   });\n                 }\n\n                 handleSubmit(e) {\n                   e.preventDefault();\n                   const usersRef = firebase\n                     .database()\n                     .ref(\"users\");\n                   const user = {\n                     email: this.state.email,\n                     name: this.state.name\n                   };\n                   usersRef.push(user, () => {\n                     // this.props.history.push('/thankyou');\n                   });\n                   this.setState({\n                     email: \"\",\n                     name: \"\"\n                   });\n                 }\n\n                 componentDidMount() {\n                   this.inputNameRef.current.focus();\n                 }\n\n                 render() {\n                   return (\n                     <div className=\"flex-1 flex justify-center lg:items-center flex-col\">\n                       <div className='lg:w-2/4 px-16'>\n                         <h1 className=\"font-edmondsans text-48\">Download it for free</h1>\n                         <div className=\"font-edmondsans text-32\"> The SME purpose Ebook</div>\n                         <form\n                           onSubmit={this.handleSubmit}\n                           className=\"FormFields\"\n                         >\n                           <div className=\"flex flex-col\">\n                             <label htmlFor=\"name\">\n                               Full Name\n                             </label>\n                             <input\n                               ref={this.inputNameRef}\n                               type=\"text\"\n                               id=\"name\"\n                               placeholder=\"John Good\"\n                               name=\"name\"\n                               value={this.state.name}\n                               onChange={this.handleChange}\n                             />\n                           </div>\n                           <div className=\"flex flex-col\">\n                             <label htmlFor=\"name\">\n                               Your work e-mail\n                             </label>\n                             <input\n                               type=\"email\"\n                               id=\"email\"\n                               placeholder=\"you@yourwork.com\"\n                               name=\"email\"\n                               value={this.state.email}\n                               onChange={this.handleChange}\n                             />\n                           </div>\n                           <div className=\"\">\n                             <label>\n                               <input\n                                 type=\"checkbox\"\n                                 name=\"hasAgreed\"\n                                 required={true}\n                                 value={this.state.hasAgreed}\n                                 onChange={this.handleChange}\n                               />{\" \"}\n                               I agree to all statements in the{\" \"}\n                               <a href=\"\">terms of service</a>\n                             </label>\n                           </div>\n\n                           <div>\n                             <button>Download E-book</button>\n                           </div>\n                         </form>\n                       </div>\n                     </div>\n                   );\n                 }\n               }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAGA;AAIA;AA3BA;AA4BA;AACA;;;AACA;AACA;AACA;AAIA;AAEA;AAGA;;;AAEA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA5HA;AACA;;;;;A","sourceRoot":""}